{"ast":null,"code":"var _jsxFileName = \"/Users/mariavirt/WebstormProjects/styling/src/components/BlockChange.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BlockChange() {\n  _s();\n\n  const [back, setBack] = React.useState(\"blue\");\n  const [bord, setBord] = React.useState(\"white\");\n  const [num, setNum] = React.useState(0);\n  const [increment, setIncrement] = React.useState(1);\n  let stylingBlock = {\n    backgroundColor: back,\n    borderColor: bord,\n    borderWidth: \"2px\",\n    borderStyle: \"solid\",\n    height: \"50px\",\n    width: \"50px\"\n  };\n  /*let combine=()=>{\n      if(num === 0){\n          setBack(\"blue\")\n          setBord(\"white\")\n          setNum(num+1)\n      }else if(num ===1){\n          setBack(\"purple\")\n          setBord(\"white\")\n          setNum(num+1)\n      }else{\n          setBack(\"green\")\n          setBord(\"white\")\n          setNum(0)\n      }\n      style={stylingBlock} onClick={combine}\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIncrement(increment + 1),\n      children: [\"Increase by 1 : \", increment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: stylingBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BlockChange, \"4Z6lSweBpptQeWlD66IyN5LZHLc=\");\n\n_c = BlockChange;\nexport default BlockChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockChange\");","map":{"version":3,"sources":["/Users/mariavirt/WebstormProjects/styling/src/components/BlockChange.js"],"names":["React","BlockChange","back","setBack","useState","bord","setBord","num","setNum","increment","setIncrement","stylingBlock","backgroundColor","borderColor","borderWidth","borderStyle","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,WAAT,GAAsB;AAAA;;AAElB,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe,MAAf,CAAvB;AACA,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBN,KAAK,CAACI,QAAN,CAAe,OAAf,CAAvB;AACA,QAAK,CAACG,GAAD,EAAMC,MAAN,IAAeR,KAAK,CAACI,QAAN,CAAe,CAAf,CAApB;AACA,QAAK,CAACK,SAAD,EAAYC,YAAZ,IAA0BV,KAAK,CAACI,QAAN,CAAe,CAAf,CAA/B;AAEA,MAAIO,YAAY,GAAC;AACbC,IAAAA,eAAe,EAAEV,IADJ;AAEbW,IAAAA,WAAW,EAAER,IAFA;AAGbS,IAAAA,WAAW,EAAC,KAHC;AAIbC,IAAAA,WAAW,EAAE,OAJA;AAKbC,IAAAA,MAAM,EAAE,MALK;AAMbC,IAAAA,KAAK,EAAE;AANM,GAAjB;AASA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAG,MAAIP,YAAY,CAACD,SAAS,GAAC,CAAX,CAAlC;AAAA,qCAAkEA,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAEE;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAxCQV,W;;KAAAA,W;AAyCT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nfunction BlockChange(){\n\n    const[back, setBack] = React.useState(\"blue\")\n    const[bord, setBord] = React.useState(\"white\")\n    const[num, setNum] =React.useState(0)\n    const[increment, setIncrement]=React.useState(1);\n\n    let stylingBlock={\n        backgroundColor: back,\n        borderColor: bord,\n        borderWidth:\"2px\",\n        borderStyle: \"solid\",\n        height: \"50px\",\n        width: \"50px\"\n    }\n\n    /*let combine=()=>{\n        if(num === 0){\n            setBack(\"blue\")\n            setBord(\"white\")\n            setNum(num+1)\n        }else if(num ===1){\n            setBack(\"purple\")\n            setBord(\"white\")\n            setNum(num+1)\n        }else{\n            setBack(\"green\")\n            setBord(\"white\")\n            setNum(0)\n        }\n        style={stylingBlock} onClick={combine}\n    }*/\n    return(\n        <div>\n            <button onClick ={()=>setIncrement(increment+1)}>Increase by 1 : {increment}</button>\n            <div style={stylingBlock}/>\n        </div>\n    )\n\n\n}\nexport default BlockChange;"]},"metadata":{},"sourceType":"module"}