{"ast":null,"code":"var _jsxFileName = \"/Users/mariavirt/WebstormProjects/styling/src/components/BlockChange.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Block from \"./Block\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BlockChange() {\n  _s();\n\n  let list = [\"\"]; //set states\n\n  const [blocks, setBlocks] = React.useState(list);\n  let [increment, setIncrement] = React.useState(0);\n  const [back, setBack] = React.useState(\"blue\");\n  let [reset, setReset] = React.useState(false);\n  let stylingBlock = {\n    backgroundColor: back,\n    borderColor: \"white\",\n    borderWidth: \"2px\",\n    borderStyle: \"solid\",\n    height: \"50px\",\n    width: \"50px\",\n    marginTop: \"10px\"\n  };\n  let BlockEles = blocks.map((obj, idx) => /*#__PURE__*/_jsxDEV(Block, {}, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this));\n\n  const addBlock = () => {\n    if (setIncrement % 2 !== 0) {\n      let newBlock = blocks;\n      newBlock.push(\"\");\n      setBlocks(newBlock);\n      console.log(blocks);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIncrement(increment + 1);\n        addBlock();\n      },\n      children: [\"Increase by 1 : \", increment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIncrement(0),\n      children: \"Click to Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: stylingBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BlockChange, \"RKFzbnMAfiDt+/dckdEPJzYVE7Q=\");\n\n_c = BlockChange;\nexport default BlockChange;\n/* React.useEffect(()=>{\n        if(setBlock){\n            setBack(\"blue\")\n        }else{\n            setBack(\"red\")\n        }\n\n    }, [setBlock])*/\n\n/*\n\n    const addBlock = () => {\n        stylingBlock.push(\n            \"\"\n        );\n        setBlock(list);\n    }\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockChange\");","map":{"version":3,"sources":["/Users/mariavirt/WebstormProjects/styling/src/components/BlockChange.js"],"names":["React","Block","BlockChange","list","blocks","setBlocks","useState","increment","setIncrement","back","setBack","reset","setReset","stylingBlock","backgroundColor","borderColor","borderWidth","borderStyle","height","width","marginTop","BlockEles","map","obj","idx","addBlock","newBlock","push","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,WAAT,GAAsB;AAAA;;AAClB,MAAIC,IAAI,GAAE,CACN,EADM,CAAV,CADkB,CAKlB;;AACA,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBL,KAAK,CAACM,QAAN,CAAeH,IAAf,CAA3B;AACA,MAAI,CAACI,SAAD,EAAYC,YAAZ,IAA4BR,KAAK,CAACM,QAAN,CAAe,CAAf,CAAhC;AACA,QAAK,CAACG,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACM,QAAN,CAAe,MAAf,CAAvB;AACA,MAAI,CAACK,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACM,QAAN,CAAe,KAAf,CAAxB;AAIA,MAAIO,YAAY,GAAC;AACbC,IAAAA,eAAe,EAAEL,IADJ;AAEbM,IAAAA,WAAW,EAAE,OAFA;AAGbC,IAAAA,WAAW,EAAC,KAHC;AAIbC,IAAAA,WAAW,EAAE,OAJA;AAKbC,IAAAA,MAAM,EAAE,MALK;AAMbC,IAAAA,KAAK,EAAE,MANM;AAObC,IAAAA,SAAS,EAAE;AAPE,GAAjB;AAUA,MAAIC,SAAS,GAAGjB,MAAM,CAACkB,GAAP,CAAW,CAACC,GAAD,EAAKC,GAAL,kBACvB,QAAC,KAAD,MAAcA,GAAd;AAAA;AAAA;AAAA;AAAA,UADY,CAAhB;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAKjB,YAAY,GAAE,CAAf,KAAsB,CAA1B,EAA4B;AACxB,UAAIkB,QAAQ,GAAGtB,MAAf;AACAsB,MAAAA,QAAQ,CAACC,IAAT,CACI,EADJ;AAGAtB,MAAAA,SAAS,CAACqB,QAAD,CAAT;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYzB,MAAZ;AACH;AACJ,GATD;;AAcA,sBACI;AAAA,4BACG;AAAQ,MAAA,OAAO,EAAG,MAAI;AAACI,QAAAA,YAAY,CAACD,SAAS,GAAC,CAAX,CAAZ;AAA0BkB,QAAAA,QAAQ;AAAG,OAA5D;AAAA,qCAA+ElB,SAA/E;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEI;AAAQ,MAAA,OAAO,EAAG,MAAIC,YAAY,CAAC,CAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,KAAK,EAAEK;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GApDQX,W;;KAAAA,W;AAqDT,eAAeA,WAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport Block from \"./Block\";\n\nfunction BlockChange(){\n    let list =[\n        \"\"\n    ];\n\n    //set states\n    const[blocks, setBlocks] = React.useState(list);\n    let [increment, setIncrement] = React.useState(0);\n    const[back, setBack] = React.useState(\"blue\");\n    let [reset, setReset] = React.useState(false);\n\n\n\n    let stylingBlock={\n        backgroundColor: back,\n        borderColor: \"white\",\n        borderWidth:\"2px\",\n        borderStyle: \"solid\",\n        height: \"50px\",\n        width: \"50px\",\n        marginTop: \"10px\"\n    }\n\n    let BlockEles = blocks.map((obj,idx)=>\n        <Block key = {idx} />\n    )\n\n\n\n    const addBlock = () => {\n        if ((setIncrement %2) !== 0){\n            let newBlock = blocks;\n            newBlock.push(\n                \"\"\n            );\n            setBlocks(newBlock);\n            console.log(blocks);\n        }\n    }\n\n\n\n\n    return(\n        <div>\n           <button onClick ={()=>{setIncrement(increment+1);addBlock()}}>Increase by 1 : {increment}</button>\n            <button onClick ={()=>setIncrement(0)}>Click to Reset</button>\n            <div style={stylingBlock}/>\n        </div>\n    )\n\n\n}\nexport default BlockChange;\n\n/* React.useEffect(()=>{\n        if(setBlock){\n            setBack(\"blue\")\n        }else{\n            setBack(\"red\")\n        }\n\n    }, [setBlock])*/\n\n/*\n\n    const addBlock = () => {\n        stylingBlock.push(\n            \"\"\n        );\n        setBlock(list);\n    }\n*/"]},"metadata":{},"sourceType":"module"}