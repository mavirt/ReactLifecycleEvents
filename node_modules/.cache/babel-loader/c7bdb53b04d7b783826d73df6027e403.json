{"ast":null,"code":"var _jsxFileName = \"/Users/mariavirt/WebstormProjects/styling/src/components/BlockChange.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Block from \"./Block\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BlockChange() {\n  _s();\n\n  let list = [\"\"]; //set states\n\n  const [blocks, setBlocks] = React.useState(list);\n  let [increment, setIncrement] = React.useState(0);\n  const [back, setBack] = React.useState(\"blue\");\n  let [reset, setReset] = React.useState(false);\n  let stylingBlock = {\n    backgroundColor: back,\n    borderColor: \"white\",\n    borderWidth: \"2px\",\n    borderStyle: \"solid\",\n    height: \"50px\",\n    width: \"50px\",\n    marginTop: \"10px\"\n  };\n  let BlockEles = blocks.map((obj, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: stylingBlock,\n    children: obj\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this));\n\n  const addBlock = () => {\n    if (increment % 2 == 0) {\n      let newBlock = blocks;\n      newBlock.push(\"\");\n      setBlocks(newBlock);\n      console.log(blocks);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIncrement(increment + 1);\n        addBlock();\n      },\n      children: [\"Increase by 1 : \", increment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIncrement(0);\n        setBlocks(list);\n        setBack(\"blue\");\n      },\n      children: \"Click to Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), BlockEles]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BlockChange, \"RKFzbnMAfiDt+/dckdEPJzYVE7Q=\");\n\n_c = BlockChange;\nexport default BlockChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockChange\");","map":{"version":3,"sources":["/Users/mariavirt/WebstormProjects/styling/src/components/BlockChange.js"],"names":["React","Block","BlockChange","list","blocks","setBlocks","useState","increment","setIncrement","back","setBack","reset","setReset","stylingBlock","backgroundColor","borderColor","borderWidth","borderStyle","height","width","marginTop","BlockEles","map","obj","idx","addBlock","newBlock","push","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,MAAIC,IAAI,GAAG,CACP,EADO,CAAX,CADmB,CAKnB;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,KAAK,CAACM,QAAN,CAAeH,IAAf,CAA5B;AACA,MAAI,CAACI,SAAD,EAAYC,YAAZ,IAA4BR,KAAK,CAACM,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACM,QAAN,CAAe,MAAf,CAAxB;AACA,MAAI,CAACK,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACM,QAAN,CAAe,KAAf,CAAxB;AAGA,MAAIO,YAAY,GAAG;AACfC,IAAAA,eAAe,EAAEL,IADF;AAEfM,IAAAA,WAAW,EAAE,OAFE;AAGfC,IAAAA,WAAW,EAAE,KAHE;AAIfC,IAAAA,WAAW,EAAE,OAJE;AAKfC,IAAAA,MAAM,EAAE,MALO;AAMfC,IAAAA,KAAK,EAAE,MANQ;AAOfC,IAAAA,SAAS,EAAE;AAPI,GAAnB;AAUA,MAAIC,SAAS,GAAGjB,MAAM,CAACkB,GAAP,CAAW,CAACC,GAAD,EAAMC,GAAN,kBACvB;AAAe,IAAA,KAAK,EAAEX,YAAtB;AAAA,cAAqCU;AAArC,KAAUC,GAAV;AAAA;AAAA;AAAA;AAAA,UADY,CAAhB;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAKlB,SAAS,GAAG,CAAb,IAAmB,CAAvB,EAA0B;AACtB,UAAImB,QAAQ,GAAGtB,MAAf;AACAsB,MAAAA,QAAQ,CAACC,IAAT,CACI,EADJ;AAGAtB,MAAAA,SAAS,CAACqB,QAAD,CAAT;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYzB,MAAZ;AACH;AACJ,GATD;;AAYA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnBI,QAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACAkB,QAAAA,QAAQ;AACX,OAHD;AAAA,qCAGoBlB,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnBC,QAAAA,YAAY,CAAC,CAAD,CAAZ;AACAH,QAAAA,SAAS,CAACF,IAAD,CAAT;AACAO,QAAAA,OAAO,CAAC,MAAD,CAAP;AAAgB,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAWKW,SAXL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAxDQnB,W;;KAAAA,W;AA0DT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport Block from \"./Block\";\n\nfunction BlockChange() {\n    let list = [\n        \"\"\n    ];\n\n    //set states\n    const [blocks, setBlocks] = React.useState(list);\n    let [increment, setIncrement] = React.useState(0);\n    const [back, setBack] = React.useState(\"blue\");\n    let [reset, setReset] = React.useState(false);\n\n\n    let stylingBlock = {\n        backgroundColor: back,\n        borderColor: \"white\",\n        borderWidth: \"2px\",\n        borderStyle: \"solid\",\n        height: \"50px\",\n        width: \"50px\",\n        marginTop: \"10px\"\n    }\n\n    let BlockEles = blocks.map((obj, idx) =>\n        <div key={idx} style={stylingBlock}>{obj}</div>\n    )\n\n\n    const addBlock = () => {\n        if ((increment % 2) == 0) {\n            let newBlock = blocks;\n            newBlock.push(\n                \"\"\n            );\n            setBlocks(newBlock);\n            console.log(blocks);\n        }\n    }\n\n\n    return (\n        <div>\n            <button onClick={() => {\n                setIncrement(increment + 1);\n                addBlock()\n            }}>Increase by 1 : {increment}</button>\n            <button onClick={() => {\n                setIncrement(0);\n                setBlocks(list);\n                setBack(\"blue\")}\n            }>Click to Reset\n            </button>\n            {BlockEles}\n        </div>\n    )\n\n\n}\n\nexport default BlockChange;\n"]},"metadata":{},"sourceType":"module"}