{"ast":null,"code":"var _jsxFileName = \"/Users/mariavirt/WebstormProjects/styling/src/components/BlockChange.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BlockChange() {\n  _s();\n\n  let list = [{\n    id: 1\n  }, {\n    id: 2\n  }, {\n    id: 3\n  }]; //set states\n\n  const [block, setBlock] = React.useState([1]);\n  const [increment, setIncrement] = React.useState(1);\n  const [back, setBack] = React.useState(\"blue\");\n  const [reset, setReset] = React.useState(false);\n  let stylingBlock = {\n    backgroundColor: back,\n    borderColor: \"white\",\n    borderWidth: \"2px\",\n    borderStyle: \"solid\",\n    height: \"50px\",\n    width: \"50px\",\n    marginTop: \"10px\"\n  };\n  React.useEffect(() => {\n    if (setBlock) {\n      setBack(\"green\");\n    } else {\n      setBack(\"red\");\n    }\n  }, [setBlock]); //create new block when incremented\n\n  const addBlock = () => {\n    stylingBlock.push({\n      id: 4\n    });\n    setBlock(list);\n    setReset(!reset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIncrement(increment + 1),\n      children: [\"Increase by 1 : \", increment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setReset(true),\n      children: \"Click to Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: stylingBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BlockChange, \"MDM7Dehmix4bG2CF7b5KIeYCa0E=\");\n\n_c = BlockChange;\nexport default BlockChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockChange\");","map":{"version":3,"sources":["/Users/mariavirt/WebstormProjects/styling/src/components/BlockChange.js"],"names":["React","BlockChange","list","id","block","setBlock","useState","increment","setIncrement","back","setBack","reset","setReset","stylingBlock","backgroundColor","borderColor","borderWidth","borderStyle","height","width","marginTop","useEffect","addBlock","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,WAAT,GAAsB;AAAA;;AAClB,MAAIC,IAAI,GAAE,CACN;AACIC,IAAAA,EAAE,EAAE;AADR,GADM,EAIN;AACIA,IAAAA,EAAE,EAAE;AADR,GAJM,EAON;AACIA,IAAAA,EAAE,EAAE;AADR,GAPM,CAAV,CADkB,CAclB;;AACA,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe,CAAC,CAAD,CAAf,CAAzB;AACA,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,KAAK,CAACM,QAAN,CAAe,CAAf,CAAjC;AACA,QAAK,CAACG,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACM,QAAN,CAAe,MAAf,CAAvB;AACA,QAAK,CAACK,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACM,QAAN,CAAe,KAAf,CAAzB;AAEA,MAAIO,YAAY,GAAC;AACbC,IAAAA,eAAe,EAAEL,IADJ;AAEbM,IAAAA,WAAW,EAAE,OAFA;AAGbC,IAAAA,WAAW,EAAC,KAHC;AAIbC,IAAAA,WAAW,EAAE,OAJA;AAKbC,IAAAA,MAAM,EAAE,MALK;AAMbC,IAAAA,KAAK,EAAE,MANM;AAObC,IAAAA,SAAS,EAAE;AAPE,GAAjB;AAUApB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAI;AAChB,QAAGhB,QAAH,EAAY;AACRK,MAAAA,OAAO,CAAC,OAAD,CAAP;AACH,KAFD,MAEK;AACDA,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AAEJ,GAPD,EAOG,CAACL,QAAD,CAPH,EA9BkB,CAuClB;;AACA,QAAMiB,QAAQ,GAAG,MAAM;AACnBT,IAAAA,YAAY,CAACU,IAAb,CAAkB;AACdpB,MAAAA,EAAE,EAAE;AADU,KAAlB;AAGAE,IAAAA,QAAQ,CAACH,IAAD,CAAR;AACAU,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACH,GAND;;AAYA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAG,MAAIH,YAAY,CAACD,SAAS,GAAC,CAAX,CAAlC;AAAA,qCAAkEA,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAG,MAAIK,QAAQ,CAAC,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,KAAK,EAAEC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA7DQZ,W;;KAAAA,W;AA8DT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nfunction BlockChange(){\n    let list =[\n        {\n            id: 1,\n        },\n        {\n            id: 2,\n        },\n        {\n            id: 3,\n        }\n    ];\n\n\n    //set states\n    const[block, setBlock] = React.useState([1]);\n    const[increment, setIncrement] = React.useState(1);\n    const[back, setBack] = React.useState(\"blue\");\n    const[reset, setReset] = React.useState(false);\n\n    let stylingBlock={\n        backgroundColor: back,\n        borderColor: \"white\",\n        borderWidth:\"2px\",\n        borderStyle: \"solid\",\n        height: \"50px\",\n        width: \"50px\",\n        marginTop: \"10px\"\n    }\n\n    React.useEffect(()=>{\n        if(setBlock){\n            setBack(\"green\")\n        }else{\n            setBack(\"red\")\n        }\n\n    }, [setBlock])\n\n    //create new block when incremented\n    const addBlock = () => {\n        stylingBlock.push({\n            id: 4,\n        });\n        setBlock(list);\n        setReset(!reset);\n    }\n\n\n\n\n\n    return(\n        <div>\n            <button onClick ={()=>setIncrement(increment+1)}>Increase by 1 : {increment}</button>\n            <button onClick ={()=>setReset(true)}>Click to Reset</button>\n            <div style={stylingBlock}/>\n        </div>\n    )\n\n\n}\nexport default BlockChange;"]},"metadata":{},"sourceType":"module"}